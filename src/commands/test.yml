description: >
  Runs 'go test ./<target>/...'  with gotestsum, and upload test result.
parameters:
  target:
    type: string
    description: Import paths of packages to be tested.
  coverage-file:
    type: string
    default: -coverprofile=coverage.txt
    description: Coverage flag. Set to the empty string to disable.
  coverage-pkg:
    type: string
    default: -coverpkg=./...
    description: Coverage flag. Set to the empty string to disable.
  go-test-flags:
    type: string
    default: -timeout=30m
    description: Flags passed to go test.
  suite:
    type: string
    default: unit
    description: Test suite name to report to CircleCI.
  gotestsum-format:
    type: string
    default: standard-verbose
    description: gotestsum format. https://github.com/gotestyourself/gotestsum#format
  codecov-upload:
    type: boolean
    default: false
    description: |
      Upload coverage report to https://codecov.io/. Requires the codecov API token to be
      set as an environment variable for private projects.
  display-name:
    type: string
    default: unit test
steps:
  - run:
      name: << parameters.display-name >>
      environment:
        SUITE : "<<parameters.suite>>"
        TEST_FMT : "<<parameters.gotestsum-format>>"
        TEST_COVERAGE_FILE : "<<parameters.coverage-file>>"
        TEST_COVERAGE_PKG : "<<parameters.coverage-pkg>>"
        TEST_FLAGS : "<<parameters.go-test-flags>>"
        TARGET : "<<parameters.target>>"
      command: <<include(scripts/test.sh)>>
      no_output_timeout: 30m
  - store_artifacts:
      path: /tmp/test-artifacts/<< parameters.suite >>.json
  - when:
      condition: << parameters.codecov-upload >>
      steps:
        - run:
            shell: /bin/bash -eo pipefail
            command: |
              bash <(curl -s https://codecov.io/bash)
